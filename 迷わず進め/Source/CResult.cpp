//=============================================================================
//
//  [CResult.cpp]
// Author : 長岡和真
//
//=============================================================================
#include "CResult.h"
#include "CScene.h"
#include "CScene2D.h"
//*****************************************************************************
// マクロ定義
//*****************************************************************************
#define TIMER	(240)
//*****************************************************************************
// プロトタイプ宣言
//*****************************************************************************

//*****************************************************************************
// 構造体
//*****************************************************************************

//*****************************************************************************
// グローバル変数
//*****************************************************************************
CScene *pResultObj[1];
int g_returnTimer = 0;

CResult::CResult(void)
{
	g_returnTimer = TIMER;
};
CResult::~CResult(void)
{
	g_returnTimer = 0;
};

//=============================================================================
// リザルトの初期化処理
//=============================================================================
HRESULT CResult::Init(LPDIRECT3DDEVICE9 m_pD3DDevice,GAMEJUDG judg)
{
	//クリア判定
	if(judg==GAME_CLEAR)
	{
		pResultObj[0] = CScene2D::Create(m_pD3DDevice,"data\\TEXTURE\\gameclear.png",D3DXVECTOR3(0,0,1.0f),D3DXVECTOR3(0,0,0),SCREEN_WIDTH,SCREEN_HEIGHT,D3DCOLOR_RGBA(255,0,0,0));
	}
	if(judg==GAME_OVER)
	{
		pResultObj[0] = CScene2D::Create(m_pD3DDevice,"data\\TEXTURE\\gameover.png",D3DXVECTOR3(0,0,1.0f),D3DXVECTOR3(0,0,0),SCREEN_WIDTH,SCREEN_HEIGHT,D3DCOLOR_RGBA(255,0,0,0));
	}

	return S_OK;
}

//=============================================================================
// リザルトの終了処理
//=============================================================================
void CResult::Uninit(void)
{
	for(int i=0;i<1;i++)
	{
		if(pResultObj[i]!=NULL)
		{
			pResultObj[i]->Uninit();
			pResultObj[i]=NULL;
		}
	}
}

//=============================================================================
// リザルトの更新処理
//=============================================================================
void CResult::Update(void)
{
	if(g_returnTimer>0)
	g_returnTimer--;

}
int CResult::GetTime(void)
{
	return g_returnTimer;
}